/* tslint:disable */
/* eslint-disable */
/**
 * Karasu Lab API
 * API documentation for Karasu Lab
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ArtifactsControllerGetRequestVersion } from './ArtifactsControllerGetRequestVersion';
import {
    ArtifactsControllerGetRequestVersionFromJSON,
    ArtifactsControllerGetRequestVersionFromJSONTyped,
    ArtifactsControllerGetRequestVersionToJSON,
    ArtifactsControllerGetRequestVersionToJSONTyped,
} from './ArtifactsControllerGetRequestVersion';
import type { CharactersControllerGetRequest } from './CharactersControllerGetRequest';
import {
    CharactersControllerGetRequestFromJSON,
    CharactersControllerGetRequestFromJSONTyped,
    CharactersControllerGetRequestToJSON,
    CharactersControllerGetRequestToJSONTyped,
} from './CharactersControllerGetRequest';

/**
 * 
 * @export
 * @interface CountriesControllerGetRequest
 */
export interface CountriesControllerGetRequest {
    /**
     * 
     * @type {string}
     * @memberof CountriesControllerGetRequest
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof CountriesControllerGetRequest
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof CountriesControllerGetRequest
     */
    description?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CountriesControllerGetRequest
     */
    icon_url: string;
    /**
     * 
     * @type {ArtifactsControllerGetRequestVersion}
     * @memberof CountriesControllerGetRequest
     */
    version: ArtifactsControllerGetRequestVersion;
    /**
     * 
     * @type {Array<CharactersControllerGetRequest>}
     * @memberof CountriesControllerGetRequest
     */
    characters: Array<CharactersControllerGetRequest>;
}

/**
 * Check if a given object implements the CountriesControllerGetRequest interface.
 */
export function instanceOfCountriesControllerGetRequest(value: object): value is CountriesControllerGetRequest {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('icon_url' in value) || value['icon_url'] === undefined) return false;
    if (!('version' in value) || value['version'] === undefined) return false;
    if (!('characters' in value) || value['characters'] === undefined) return false;
    return true;
}

export function CountriesControllerGetRequestFromJSON(json: any): CountriesControllerGetRequest {
    return CountriesControllerGetRequestFromJSONTyped(json, false);
}

export function CountriesControllerGetRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CountriesControllerGetRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'icon_url': json['icon_url'],
        'version': ArtifactsControllerGetRequestVersionFromJSON(json['version']),
        'characters': ((json['characters'] as Array<any>).map(CharactersControllerGetRequestFromJSON)),
    };
}

export function CountriesControllerGetRequestToJSON(json: any): CountriesControllerGetRequest {
    return CountriesControllerGetRequestToJSONTyped(json, false);
}

export function CountriesControllerGetRequestToJSONTyped(value?: CountriesControllerGetRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'description': value['description'],
        'icon_url': value['icon_url'],
        'version': ArtifactsControllerGetRequestVersionToJSON(value['version']),
        'characters': ((value['characters'] as Array<any>).map(CharactersControllerGetRequestToJSON)),
    };
}

