/* tslint:disable */
/* eslint-disable */
/**
 * Karasu Lab API
 * API documentation for Karasu Lab
 *
 * The version of the OpenAPI document: 4.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CharactersControllerGetRequestWeaponVersion } from './CharactersControllerGetRequestWeaponVersion';
import {
    CharactersControllerGetRequestWeaponVersionFromJSON,
    CharactersControllerGetRequestWeaponVersionFromJSONTyped,
    CharactersControllerGetRequestWeaponVersionToJSON,
    CharactersControllerGetRequestWeaponVersionToJSONTyped,
} from './CharactersControllerGetRequestWeaponVersion';

/**
 * 
 * @export
 * @interface WeaponsControllerGetRequest
 */
export interface WeaponsControllerGetRequest {
    /**
     * 
     * @type {string}
     * @memberof WeaponsControllerGetRequest
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof WeaponsControllerGetRequest
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof WeaponsControllerGetRequest
     */
    description?: string | null;
    /**
     * 
     * @type {string}
     * @memberof WeaponsControllerGetRequest
     */
    icon_url?: string;
    /**
     * 
     * @type {number}
     * @memberof WeaponsControllerGetRequest
     */
    rarity?: number;
    /**
     * 
     * @type {string}
     * @memberof WeaponsControllerGetRequest
     */
    effect?: string;
    /**
     * 
     * @type {string}
     * @memberof WeaponsControllerGetRequest
     */
    type?: string;
    /**
     * 
     * @type {CharactersControllerGetRequestWeaponVersion}
     * @memberof WeaponsControllerGetRequest
     */
    version?: CharactersControllerGetRequestWeaponVersion;
}

/**
 * Check if a given object implements the WeaponsControllerGetRequest interface.
 */
export function instanceOfWeaponsControllerGetRequest(value: object): value is WeaponsControllerGetRequest {
    return true;
}

export function WeaponsControllerGetRequestFromJSON(json: any): WeaponsControllerGetRequest {
    return WeaponsControllerGetRequestFromJSONTyped(json, false);
}

export function WeaponsControllerGetRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): WeaponsControllerGetRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'icon_url': json['icon_url'] == null ? undefined : json['icon_url'],
        'rarity': json['rarity'] == null ? undefined : json['rarity'],
        'effect': json['effect'] == null ? undefined : json['effect'],
        'type': json['type'] == null ? undefined : json['type'],
        'version': json['version'] == null ? undefined : CharactersControllerGetRequestWeaponVersionFromJSON(json['version']),
    };
}

export function WeaponsControllerGetRequestToJSON(json: any): WeaponsControllerGetRequest {
    return WeaponsControllerGetRequestToJSONTyped(json, false);
}

export function WeaponsControllerGetRequestToJSONTyped(value?: WeaponsControllerGetRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'description': value['description'],
        'icon_url': value['icon_url'],
        'rarity': value['rarity'],
        'effect': value['effect'],
        'type': value['type'],
        'version': CharactersControllerGetRequestWeaponVersionToJSON(value['version']),
    };
}

