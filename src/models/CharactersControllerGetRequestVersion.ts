/* tslint:disable */
/* eslint-disable */
/**
 * Karasu Lab API
 * API documentation for Karasu Lab
 *
 * The version of the OpenAPI document: 4.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CharactersControllerGetRequestWeaponVersionArtifactSetsInner } from './CharactersControllerGetRequestWeaponVersionArtifactSetsInner';
import {
    CharactersControllerGetRequestWeaponVersionArtifactSetsInnerFromJSON,
    CharactersControllerGetRequestWeaponVersionArtifactSetsInnerFromJSONTyped,
    CharactersControllerGetRequestWeaponVersionArtifactSetsInnerToJSON,
    CharactersControllerGetRequestWeaponVersionArtifactSetsInnerToJSONTyped,
} from './CharactersControllerGetRequestWeaponVersionArtifactSetsInner';
import type { CharactersControllerGetRequestWeaponVersionRegionsInner } from './CharactersControllerGetRequestWeaponVersionRegionsInner';
import {
    CharactersControllerGetRequestWeaponVersionRegionsInnerFromJSON,
    CharactersControllerGetRequestWeaponVersionRegionsInnerFromJSONTyped,
    CharactersControllerGetRequestWeaponVersionRegionsInnerToJSON,
    CharactersControllerGetRequestWeaponVersionRegionsInnerToJSONTyped,
} from './CharactersControllerGetRequestWeaponVersionRegionsInner';

/**
 * 
 * @export
 * @interface CharactersControllerGetRequestVersion
 */
export interface CharactersControllerGetRequestVersion {
    /**
     * 
     * @type {string}
     * @memberof CharactersControllerGetRequestVersion
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof CharactersControllerGetRequestVersion
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof CharactersControllerGetRequestVersion
     */
    version_string: string;
    /**
     * 
     * @type {boolean}
     * @memberof CharactersControllerGetRequestVersion
     */
    released: boolean;
    /**
     * 
     * @type {Array<CharactersControllerGetRequestWeaponVersionArtifactSetsInner>}
     * @memberof CharactersControllerGetRequestVersion
     */
    artifact_sets?: Array<CharactersControllerGetRequestWeaponVersionArtifactSetsInner> | null;
    /**
     * 
     * @type {Array<CharactersControllerGetRequestWeaponVersionRegionsInner>}
     * @memberof CharactersControllerGetRequestVersion
     */
    regions?: Array<CharactersControllerGetRequestWeaponVersionRegionsInner> | null;
    /**
     * 
     * @type {string}
     * @memberof CharactersControllerGetRequestVersion
     */
    createdAt: string;
    /**
     * 
     * @type {string}
     * @memberof CharactersControllerGetRequestVersion
     */
    updatedAt: string;
}

/**
 * Check if a given object implements the CharactersControllerGetRequestVersion interface.
 */
export function instanceOfCharactersControllerGetRequestVersion(value: object): value is CharactersControllerGetRequestVersion {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('version_string' in value) || value['version_string'] === undefined) return false;
    if (!('released' in value) || value['released'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function CharactersControllerGetRequestVersionFromJSON(json: any): CharactersControllerGetRequestVersion {
    return CharactersControllerGetRequestVersionFromJSONTyped(json, false);
}

export function CharactersControllerGetRequestVersionFromJSONTyped(json: any, ignoreDiscriminator: boolean): CharactersControllerGetRequestVersion {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'version_string': json['version_string'],
        'released': json['released'],
        'artifact_sets': json['artifact_sets'] == null ? undefined : ((json['artifact_sets'] as Array<any>).map(CharactersControllerGetRequestWeaponVersionArtifactSetsInnerFromJSON)),
        'regions': json['regions'] == null ? undefined : ((json['regions'] as Array<any>).map(CharactersControllerGetRequestWeaponVersionRegionsInnerFromJSON)),
        'createdAt': json['createdAt'],
        'updatedAt': json['updatedAt'],
    };
}

export function CharactersControllerGetRequestVersionToJSON(json: any): CharactersControllerGetRequestVersion {
    return CharactersControllerGetRequestVersionToJSONTyped(json, false);
}

export function CharactersControllerGetRequestVersionToJSONTyped(value?: CharactersControllerGetRequestVersion | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'version_string': value['version_string'],
        'released': value['released'],
        'artifact_sets': value['artifact_sets'] == null ? undefined : ((value['artifact_sets'] as Array<any>).map(CharactersControllerGetRequestWeaponVersionArtifactSetsInnerToJSON)),
        'regions': value['regions'] == null ? undefined : ((value['regions'] as Array<any>).map(CharactersControllerGetRequestWeaponVersionRegionsInnerToJSON)),
        'createdAt': value['createdAt'],
        'updatedAt': value['updatedAt'],
    };
}

